/**
 * @fileoverview Firestore Security Rules for Sahayak Savings App
 *
 * Core Philosophy:
 * This ruleset enforces a strict user-ownership model where each user can only
 * access data associated with their own user ID. This is achieved through
 * path-based access control under the /users/{userId} collection.
 *
 * Data Structure:
 * - /users/{userId}/members/{memberId}: Stores member data, accessible only by the owning user.
 * - /users/{userId}/transactions/{transactionId}: Stores transaction data, accessible only by the owning user.
 * - /users/{userId}/groupSettings: Stores group settings, accessible only by the owning user.
 *
 * Key Security Decisions:
 * - User data is strictly segregated by user ID, preventing cross-user access.
 * - Listing of user-owned collections (members, transactions) is allowed only to the owning user.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Enforces access control for member documents. Only the owner can create, read, update, and delete.
     * @path /users/{userId}/members/{memberId}
     * @allow (create) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can create a member document under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/members/someMemberId if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2 and the memberId in the document matches the path.
     * @allow (get) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can get a member document under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/members/someMemberId if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2.
     * @allow (list) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can list member documents under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/members if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2.
     * @allow (update) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can update a member document under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/members/someMemberId if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2.
     * @allow (delete) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can delete a member document under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/members/someMemberId if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2 and the document exists.
     * @deny (create) User abc cannot create a member document under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/members/someMemberId because request.auth.uid != wq8CqKB0mlbCiFGMylZejvBHiMT2.
     * @principle Enforces document ownership for writes.
     */
    match /users/{userId}/members/{memberId} {
      allow get: if isSignedIn() && isOwner(userId);
      allow list: if isSignedIn() && isOwner(userId);
      allow create: if isSignedIn() && isOwner(userId) && request.resource.data.id == memberId;
      allow update: if isSignedIn() && isExistingOwner(userId) && resource.data.id == request.resource.data.id;
      allow delete: if isSignedIn() && isExistingOwner(userId);
    }

    /**
     * @description Enforces access control for transaction documents. Only the owner can create, read, update, and delete.
     * @path /users/{userId}/transactions/{transactionId}
     * @allow (create) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can create a transaction document under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/transactions/someTransactionId if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2 and transactionId matches the path
     * @allow (get) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can get a transaction document under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/transactions/someTransactionId if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2
     * @allow (list) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can list transaction documents under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/transactions if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2
     * @allow (update) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can update a transaction document under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/transactions/someTransactionId if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2
     * @allow (delete) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can delete a transaction document under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/transactions/someTransactionId if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2 and the document exists
     * @deny (create) User abc cannot create a transaction document under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/transactions/someTransactionId because request.auth.uid != wq8CqKB0mlbCiFGMylZejvBHiMT2
     * @principle Enforces document ownership for writes.
     */
    match /users/{userId}/transactions/{transactionId} {
      allow get: if isSignedIn() && isOwner(userId);
      allow list: if isSignedIn() && isOwner(userId);
      allow create: if isSignedIn() && isOwner(userId) && request.resource.data.id == transactionId;
      allow update: if isSignedIn() && isExistingOwner(userId) && resource.data.id == request.resource.data.id;
      allow delete: if isSignedIn() && isExistingOwner(userId);
    }

     /**
      * @description Enforces access control for group settings documents. Only the owner can create, read, update, and delete.
      * @path /users/{userId}/groupSettings
      * @allow (create) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can create a groupSettings document under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/groupSettings if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2.
      * @allow (get) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can get a groupSettings document under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/groupSettings if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2.
      * @allow (list) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can list groupSettings documents under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/groupSettings if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2.
      * @allow (update) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can update a groupSettings document under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/groupSettings if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2.
      * @allow (delete) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can delete a groupSettings document under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/groupSettings if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2.
      * @deny (create) User abc cannot create a groupSettings document under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/groupSettings because request.auth.uid != wq8CqKB0mlbCiFGMylZejvBHiMT2.
      * @principle Enforces document ownership for writes.
      */
    match /users/{userId}/groupSettings {
      allow get: if isSignedIn() && isOwner(userId);
      allow list: if isSignedIn() && isOwner(userId);
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && isExistingOwner(userId);
      allow delete: if isSignedIn() && isExistingOwner(userId);
    }
  }

  // Helper Functions
  function isSignedIn() {
    return request.auth != null;
  }

  function isOwner(userId) {
    return request.auth.uid == userId;
  }

  function isExistingOwner(userId) {
    return isSignedIn() && isOwner(userId) && resource != null;
  }
}