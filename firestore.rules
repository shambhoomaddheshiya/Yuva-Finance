/**
 * @file Firestore Security Rules for Sahayak Savings App
 *
 * @description This ruleset enforces a strict user-ownership model, where each user has full control over their data stored under their unique `userId`.
 * All data is nested under `/users/{userId}`, ensuring that only the authenticated user can access their own member data, transactions, and group settings.
 *
 * Data Structure:
 * - `/users/{userId}/members/{memberId}`: Stores member data for a specific user.
 * - `/users/{userId}/transactions/{transactionId}`: Stores transaction data for a specific user and member.
 * - `/users/{userId}/groupSettings`: Stores group settings for a specific user.
 *
 * Key Security Decisions:
 * - User listing is implicitly denied. Only the authenticated user can access data under their `userId`.
 * - All write operations are restricted to the owner of the data.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Secure access to user-specific member documents.
     * @path /users/{userId}/members/{memberId}
     * @allow (create) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can create a member document under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/members/someMemberId if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2.
     * @allow (get) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can get the member document /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/members/someMemberId if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2.
     * @allow (update) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can update the member document /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/members/someMemberId if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2 and the document exists.
     * @allow (delete) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can delete the member document /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/members/someMemberId if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2 and the document exists.
     * @deny (create) User otherUser cannot create a member document under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/members/someMemberId.
     * @deny (update) User otherUser cannot update the member document /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/members/someMemberId.
     * @deny (delete) User otherUser cannot delete the member document /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/members/someMemberId.
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId}/members/{memberId} {
      // Helper function to check if the request is from the owner.
      function isOwner(userId) {
        return request.auth != null && request.auth.uid == userId;
      }

      // Helper function to check if the request is from the existing owner.
      function isExistingOwner(userId) {
        return isOwner(userId) && resource != null;
      }
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Secure access to user-specific transaction documents.
     * @path /users/{userId}/transactions/{transactionId}
     * @allow (create) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can create a transaction document under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/transactions/someTransactionId if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2.
     * @allow (get) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can get the transaction document /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/transactions/someTransactionId if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2.
     * @allow (update) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can update the transaction document /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/transactions/someTransactionId if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2 and the document exists.
     * @allow (delete) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can delete the transaction document /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/transactions/someTransactionId if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2 and the document exists.
     * @deny (create) User otherUser cannot create a transaction document under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/transactions/someTransactionId.
     * @deny (update) User otherUser cannot update the transaction document /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/transactions/someTransactionId.
     * @deny (delete) User otherUser cannot delete the transaction document /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/transactions/someTransactionId.
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId}/transactions/{transactionId} {
      // Helper function to check if the request is from the owner.
      function isOwner(userId) {
        return request.auth != null && request.auth.uid == userId;
      }

      // Helper function to check if the request is from the existing owner.
      function isExistingOwner(userId) {
        return isOwner(userId) && resource != null;
      }
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Secure access to user-specific group settings documents.
     * @path /users/{userId}/groupSettings
     * @allow (create) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can create a groupSettings document under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/groupSettings if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2.
     * @allow (get) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can get the groupSettings document /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/groupSettings if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2.
     * @allow (update) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can update the groupSettings document /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/groupSettings if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2 and the document exists.
     * @allow (delete) User wq8CqKB0mlbCiFGMylZejvBHiMT2 can delete the groupSettings document /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/groupSettings if request.auth.uid == wq8CqKB0mlbCiFGMylZejvBHiMT2 and the document exists.
     * @deny (create) User otherUser cannot create a groupSettings document under /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/groupSettings.
     * @deny (update) User otherUser cannot update the groupSettings document /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/groupSettings.
     * @deny (delete) User otherUser cannot delete the groupSettings document /users/wq8CqKB0mlbCiFGMylZejvBHiMT2/groupSettings.
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId}/groupSettings {
      // Helper function to check if the request is from the owner.
      function isOwner(userId) {
        return request.auth != null && request.auth.uid == userId;
      }

      // Helper function to check if the request is from the existing owner.
      function isExistingOwner(userId) {
        return isOwner(userId) && resource != null;
      }
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }
  }
}